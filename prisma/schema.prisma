generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Product {
  id               String  @id @default(uuid())
  name             String
  description      String?
  price            Float?
  image            String?
  imageDescription String?
  isArchived       Boolean @default(false)

  category Category[]

  colors Color[] @relation("productColors")
  sizes  Size[]  @relation("productSizes")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Category {
  id   String @id @default(uuid())
  name String

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id        String  @id @default(uuid())
  name      String
  colorCode String
  productId String
  product   Product @relation("productColors", fields: [productId], references: [id])
  sizes     Size[]  @relation("colorSizes")

  attachments Attachment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attachment {
  id             String  @id @default(uuid())
  name           String
  imageUrl       String  @db.Text
  imgDescription String?

  colorId String
  color   Color  @relation(fields: [colorId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([colorId])
}

model Size {
  id        String  @id @default(uuid())
  size      String
  quantity  Int
  colorId   String
  productId String
  product   Product @relation("productSizes", fields: [productId], references: [id])
  color     Color   @relation("colorSizes", fields: [colorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
